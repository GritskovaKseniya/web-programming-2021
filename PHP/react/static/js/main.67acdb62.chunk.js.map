{"version":3,"sources":["api.ts","components/Table/Table.tsx","components/Form/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getData","a","fetch","then","resp","json","name","description","method","headers","body","JSON","stringify","catch","error","console","id","Table","props","handleDelete","event","deleteData","onDelete","React","useState","clickedRowId","setClickedRowId","setName","setDescription","data","onUpdate","handleSave","updateData","className","slice","map","value","onChange","e","target","onClick","Form","onSubmit","preventDefault","postData","type","placeholder","App","setData","apiData","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67acdb62.chunk.js","sourcesContent":["export async function getData() {\r\n    return fetch('http://students.yss.su/PSTGU/2019/gritskova/2021/2021.02.15/api/list.php')\r\n        .then(resp => resp.json());\r\n}\r\n\r\nexport async function postData(name: string, description: string) {\r\n    return fetch('http://students.yss.su/PSTGU/2019/gritskova/2021/2021.02.15/api/add.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({name, description}),\r\n    })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n}\r\n\r\nexport async function deleteData(id: number) {\r\n    return fetch('http://students.yss.su/PSTGU/2019/gritskova/2021/2021.02.15/api/delete.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({id}),\r\n    })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n}\r\n\r\nexport async function updateData(id: number, name: string, description: string) {\r\n    return fetch('http://students.yss.su/PSTGU/2019/gritskova/2021/2021.02.15/api/update.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify({id, name, description}),\r\n    })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n}\r\n","import React from 'react';\r\nimport { deleteData, updateData } from '../../api';\r\n\r\nexport function Table(props: any){\r\n    const handleDelete = ( id: number) => (event: any) => {\r\n        deleteData(id)\r\n            .then(() => onDelete())\r\n    }\r\n    const [clickedRowId, setClickedRowId] = React.useState<number | null>(null);\r\n    const [name, setName] = React.useState<string>(\"\");\r\n    const [description, setDescription] = React.useState<string>(\"\");\r\n    const { data, onDelete, onUpdate } = props;\r\n\r\n    const handleSave = (id: number) => (event: any) => {\r\n        updateData(id, name, description)\r\n            .then(() => {\r\n                setClickedRowId(null);\r\n                setName('');\r\n                setDescription('');\r\n                onUpdate();\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col text-center mt-5\"><h4>Table</h4></div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {\r\n                    data &&\r\n                    <table className=\"table table-bordered table-striped mr-3 ml-3 mt-1\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{data.data[0][0]}</th>\r\n                                <th>{data.data[0][1]}</th>\r\n                                <th>{data.data[0][2]}</th>\r\n                                <th>{data.data[0][3]}</th>\r\n                                <th>{data.data[0][4]}</th>\r\n                                <th>Edit</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                data.data.slice(1).map((value: any) => (\r\n                                    <tr key={value[0]}>\r\n                                        <td>{value[0]}</td>\r\n                                        <td>\r\n                                            {\r\n                                                value[0] === clickedRowId\r\n                                                    ? <input onChange={(e)=>setName(e.target.value)} value={name}/>\r\n                                                    : value[1]\r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                            {\r\n                                                value[0] === clickedRowId\r\n                                                    ? <input onChange={(e)=>setDescription(e.target.value)} value={description}/>\r\n                                                    : value[2]\r\n                                            }\r\n                                        </td>\r\n                                        <td>{value[3]}</td>\r\n                                        <td>{value[4]}</td>\r\n                                        <td>\r\n                                            {\r\n                                                value[0] === clickedRowId\r\n                                                    ? <button onClick={handleSave(value[0])} \r\n                                                        className=\"btn btn-success\">Save</button>\r\n                                                    : <button onClick={()=>{\r\n                                                        setClickedRowId(value[0]);\r\n                                                        setName(value[1]);\r\n                                                        setDescription(value[2]);\r\n                                                    }} className=\"btn btn-light\">Edit</button>\r\n                                            }               \r\n                                        </td>\r\n                                        <td><button onClick={handleDelete(value[0])} \r\n                                            className=\"btn btn-danger\">Delete</button></td>\r\n                                    </tr>\r\n\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { postData } from '../../api';\r\n\r\nexport function Form({onSubmit}: any){\r\n    const [name, setName] = React.useState<string>(\"\");\r\n    const [description, setDescription] = React.useState<string>(\"\");\r\n    function handleNameChange(event: any) {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleDescriptionChange(event: any) {\r\n        setDescription(event.target.value);\r\n    }\r\n    \r\n    function handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        postData(name, description)\r\n            .then(() => onSubmit());\r\n    }\r\n    \r\n    return (\r\n        <div className=\"auth-form-body mt-16 rounded-sm\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <p>Name: \r\n                        <input\r\n                            value={name}\r\n                            onChange={handleNameChange}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter name\"\r\n                        />\r\n                    </p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>Description:\r\n                        <input\r\n                            value={description}\r\n                            onChange={handleDescriptionChange}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter description\"\r\n                        />\r\n                    </p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-info\">Add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport { Table } from './components/Table/Table'\nimport { Form } from './components/Form/Form';\nimport { getData } from './api';\n\n\n\nfunction App() {\n  const [data, setData] = React.useState<any>(null);\n  React.useEffect(() =>{\n    getData()\n      .then((apiData) => setData(apiData))\n  }, []);\n\n  function updateData(){\n    getData()\n      .then((apiData) => setData(apiData))\n  }\n\n  return (\n    <div className=\"App container\">\n      <Table data={data} onDelete={updateData} onUpdate={updateData}/>\n      <Form onSubmit={updateData}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}